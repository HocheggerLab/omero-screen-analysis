[project]
name = "omero-screen-analysis"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [
    { name = "hh65", email = "hh65@sussex.ac.uk" }
]
requires-python = ">=3.12"
dependencies = [
    "jupyter>=1.1.1",
    "matplotlib>=3.9.2",
    "numpy>=2.1.3",
    "out",
    "pandas>=2.2.3",
    "pip>=24.3.1",
    "scipy>=1.14.1",
    "seaborn>=0.13.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "bump2version>=1.0.1",
    "mypy>=1.13.0",
    "pytest>=8.3.3",
    "ruff>=0.7.3",
]



[tool.ruff]
line-length = 79
lint.select = [
    "E", "F", "W", #flake8
    "UP", # pyupgrade
    "I", # isort
    "BLE", # flake8-blind-exception
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
]
lint.ignore = [
    "E501", # line too long. let black handle this
    "UP006", "UP007", # type annotation. As using magicgui require runtime type annotation then we disable this.
    "SIM117", # flake8-simplify - some of merged with statements are not looking great with black, reanble after drop python 3.9
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*vendored*",
    "*_vendor*",
]

target-version = "py38"
fix = true
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = ["tests"]
python_files = ["test_*.py"]
[tool.mypy]
strict = true
python_version = 3.12
exclude = '''
(
    ^\.venv
  | ^venv
  | ^env
  | ^build
  | ^dist
  | ^migrations
  | ^some_untyped_package
  | ^another_untyped_package
)/
'''
incremental = true
cache_dir = ".mypy_cache"
ignore_missing_imports = false
#follow_imports = "silent"
pretty = true
warn_unused_configs = true

[tool.uv.sources]
out = { path = "../../Desktop/out", editable = true }

["tool.mypy.some_untyped_package.*"]
ignore_missing_imports = true

["tool.mypy.another_untyped_package.*"]
ignore_missing_imports = true
